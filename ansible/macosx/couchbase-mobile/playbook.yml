---
- hosts: all
  user: "{{ ansible_ssh_user }}"

  vars:
    homebrew_dir: "{{ '/usr/local' if ansible_architecture == 'x86_64' else '/opt/homebrew' }}"

  pre_tasks:
    - name: Add passwordless sudoer
      ansible.builtin.copy:
        src: ./files/cbsudo
        dest: /private/etc/sudoers.d/cbsudo
      become: true

  tasks:
    - name: Check jenkins_jnlp_secret
      ansible.builtin.fail:
        msg: "'jenkins_jnlp_secret' is not defined or empty"
      when: (jenkins_jnlp_secret is not defined) or (jenkins_jnlp_secret|length == 0)

    - name: Check jenkins_node_name
      ansible.builtin.fail:
        msg: "'jenkins_node_name' is not defined or empty"
      when: (jenkins_node_name is not defined) or (jenkins_node_name|length == 0)

    - ansible.builtin.debug:
        msg: "Installing homebrew.  This will take a while"

    - name: Install homebrew
      ansible.builtin.shell: |
        yes| /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    - name: Disable analytics
      ansible.builtin.shell: ./brew analytics off
      args:
        chdir: "{{ homebrew_dir }}/bin"

    - ansible.builtin.debug:
        msg: "Installing homebrew packages.  This will take a while"

    - name: Install homebrew packages
      community.general.homebrew: name="{{ item }}" state=latest
      with_items:
          - bash-completion
          - carthage
          - ccache
          - cmake
          - coreutils
          - doxygen
          - git
          - jq
          - openjdk@21
          - openssl
          - pass
          - python
          - pyinstaller
          - ssh-copy-id
          - wget

    - name: Set python3 as default
      file:
        src: "{{ homebrew_dir }}/bin/python3"
        dest: "{{ homebrew_dir }}/bin/python"
        state: link

    - name: Set energy saving to zero
      ansible.builtin.shell: systemsetup -setcomputersleep Never
      become: true

    - name: Set user screensaver
      ansible.builtin.shell: defaults -currentHost write com.apple.screensaver idleTime 5

    - name: Disable logon screensaver
      ansible.builtin.shell: defaults -currentHost write com.apple.screensaver loginWindowIdleTime 0
      become: true

    - name: Add .zshenv
      ansible.builtin.copy:
        src: ./files/zshenv
        dest: "/Users/{{ ansible_ssh_user }}/.zshenv"
        owner: "{{ ansible_ssh_user }}"
        group: staff
        mode: "0644"

    # Required for CBL iOS unittest
    # jazzy, xcpretty, and slather are required gems.
    # The rest are dependent gems.
    # Mac comes w/ an older ruby, which is not compatible with latest dependent gems.
    - name: Install gems with specific versions
      community.general.gem:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
      loop:
        - { name: securerandom, version: "0.3.2" }
        - { name: drb, version: "2.0.6" }
        - { name: zeitwerk, version: "2.6.18" }
        - { name: activesupport, version: " 6.1.7.10" }
        - { name: jazzy, version: "0.14.0" }
        - { name: xcpretty, version: "0.3.0" }
        - { name: slather, version: "2.7.2" }

    - name: Create .ssh directory
      ansible.builtin.file:
        path: "/Users/{{ ansible_ssh_user }}/.ssh"
        state: directory
        owner: "{{ ansible_ssh_user }}"
        mode: "0700"

    - name: Copy SSH config files
      ansible.builtin.copy:
        src: "./ssh/{{ item }}"
        dest: "/Users/{{ ansible_ssh_user }}/.ssh/{{ item }}"
        owner: "{{ ansible_ssh_user }}"
        group: staff
        mode: "0600"
      with_items:
        - authorized_keys
        - buildbot_id_dsa
        - config
        - id_ns-codereview
        - ns-buildbot.rsa
        - patch_via_gerrit.ini

    - name: Copy .gitconfig file
      ansible.builtin.copy:
        src: ./files/gitconfig
        dest: "/Users/{{ ansible_ssh_user }}/.gitconfig"
        owner: "{{ ansible_ssh_user }}"
        group: staff
        mode: "0644"

    - name: Copy Mobile jenkins's CB developer profile
      ansible.builtin.copy:
        src: ./files/jenkins-appledeveloper.developerprofile
        dest: "/Users/{{ ansible_ssh_user }}/Downloads/jenkins-appledeveloper.developerprofile"
        owner: "{{ ansible_ssh_user }}"
        group: staff
        mode: "0644"

    - name: Copy Codesign Cert
      ansible.builtin.copy:
        src: "./files/{{ p12_cert_file }}"
        dest: "/Users/{{ ansible_ssh_user }}/Downloads/{{ p12_cert_file }}"

    # Setup build.keychain for jenkins
    - name: KeyChain Setup
      ansible.builtin.shell: |
        security create-keychain -p {{ ansible_ssh_pass }} build.keychain
        security unlock-keychain -p {{ ansible_ssh_pass }} build.keychain
        security import /Users/{{ ansible_ssh_user }}/Downloads/{{ p12_cert_file }} \
          -k build.keychain -P {{ p12_cert_password }} -A
        security set-keychain-settings -t 0 build.keychain
        security list-keychains -s build.keychain login.keychain
        security find-identity -p codesigning
        rm -f "/Users/{{ ansible_ssh_user }}/Downloads/{{ p12_cert_file }}"
      args:
        executable: /bin/bash

    - name: Creates jenkins directory
      ansible.builtin.file:
        path: "/Users/{{ ansible_ssh_user }}/jenkins"
        state: directory

    - name: Install jenkins startup script
      ansible.builtin.template:
        src: ./files/jnlp.sh.j2
        dest: "/Users/{{ ansible_ssh_user }}/jenkins/jnlp.sh"
        owner: "{{ ansible_ssh_user }}"
        group: staff
        mode: "0755"

    - name: Write secret file
      ansible.builtin.shell: "echo {{ jenkins_jnlp_secret }} > /Users/{{ ansible_ssh_user }}/jenkins/secret-file"

    - name: Enable autologin for couchbase user
      ansible.builtin.shell: |
        sudo defaults write /Library/Preferences/com.apple.loginwindow autoLoginUser {{ ansible_ssh_user }}
      args:
        executable: /bin/bash

    - name: Create Keychain Profile for Notarization
      ansible.builtin.shell: |
        security unlock-keychain -p {{ansible_ssh_pass }} /Users/{{ ansible_ssh_user }}/Library/Keychains/build.keychain
        xcrun notarytool store-credentials "COUCHBASE_AC_PASSWORD" --apple-id "build-apple@couchbase.com" \
          --team-id {{ appstore_team_id }} --password {{ appstore_token }} \
          --keychain /Users/{{ ansible_ssh_user }}/Library/Keychains/build.keychain-db
      args:
        executable: /bin/bash

    # Enable DevToolsSecurity
    - name: Enable DevToolsSecurity
      ansible.builtin.shell: |
        /usr/sbin/DevToolsSecurity --enable
        dseditgroup -o edit -a {{ ansible_ssh_user }} -t user _developer
      become: true
